<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">

	<!-- Configure Spring Security -->
    <http auto-config="false" use-expressions="true"
              entry-point-ref="loginUrlAuthenticationEntryPoint">
        <custom-filter position="FORM_LOGIN_FILTER" ref="customAuthenticationFilter" />

        <intercept-url pattern="/resource/*" filters="none" />
        <intercept-url pattern="/javax.*/**" filters="none" />

        <intercept-url pattern="/survey/**" access="isAuthenticated()" requires-channel="@springsec.requires-channel@"/>
        <intercept-url pattern="/user/**" access="isAuthenticated()" requires-channel="@springsec.requires-channel@"/>
        <intercept-url pattern="/bisoru" access="isAuthenticated()" requires-channel="@springsec.requires-channel@"/>
        <intercept-url pattern="/bilgilerim" access="isAuthenticated()" requires-channel="@springsec.requires-channel@"/>
        <intercept-url pattern="/davetlerim" access="isAuthenticated()" requires-channel="@springsec.requires-channel@"/>

        <intercept-url pattern="/transaction/**" access="isAuthenticated()" requires-channel="@springsec.requires-channel@"/>
        <intercept-url pattern="/filerim" access="isAuthenticated()" requires-channel="@springsec.requires-channel@"/>
        
        <intercept-url pattern="/order/**" access="isAuthenticated()" requires-channel="@springsec.requires-channel@"/>
        <intercept-url pattern="/hediyelerim" access="isAuthenticated()" requires-channel="@springsec.requires-channel@"/>
        <intercept-url pattern="/fincanim" access="isAuthenticated()" requires-channel="@springsec.requires-channel@"/>
        
        <intercept-url pattern="/uygun-hediyeler" access="isAuthenticated()" requires-channel="@springsec.requires-channel@"/>
        <intercept-url pattern="/product/available.xhtml" access="isAuthenticated()" requires-channel="@springsec.requires-channel@"/>
        
        <intercept-url pattern="/diger-hediyeler" access="isAuthenticated()" requires-channel="@springsec.requires-channel@"/>
        <intercept-url pattern="/product/other.xhtml" access="isAuthenticated()" requires-channel="@springsec.requires-channel@"/>
        
        <intercept-url pattern="/biten-hediyeler" access="isAuthenticated()" requires-channel="@springsec.requires-channel@"/>
        <intercept-url pattern="/product/outofstock.xhtml" access="isAuthenticated()" requires-channel="@springsec.requires-channel@"/>
        
        <intercept-url pattern="/**" access="permitAll()" requires-channel="@springsec.requires-channel@"/>

        <logout logout-url="/cikis" logout-success-url="/index.xhtml"/>


		<!--we don't want error, but we want the previous login expired <session-management> 
			<concurrency-control max-sessions="1" /> </session-management> -->
        <custom-filter position="CONCURRENT_SESSION_FILTER" ref="concurrencyFilter" />
        <session-management
            session-authentication-strategy-ref="sas" />
        <port-mappings>
            <port-mapping http="80" https="443"/>
            <port-mapping http="8090" https="8443"/>
            <port-mapping http="8080" https="8443"/>
        </port-mappings>
    </http>

    <beans:bean id="concurrencyFilter"
                    class="org.springframework.security.web.session.ConcurrentSessionFilter">
        <beans:property name="sessionRegistry" ref="sessionRegistry" />
        <beans:property name="expiredUrl" value="/giris/hata/2" />
    </beans:bean>

    <beans:bean id="sas"
                    class="org.springframework.security.web.authentication.session.ConcurrentSessionControlStrategy">
        <beans:constructor-arg name="sessionRegistry"
                                       ref="sessionRegistry" />
        <beans:property name="maximumSessions" value="1" />
    </beans:bean>

    <beans:bean id="sessionRegistry"
                    class="org.springframework.security.core.session.SessionRegistryImpl" />

    <beans:bean id="customAuthenticationFilter"
                    class="com.dna.bifincan.security.CustomUsernamePasswordAuthenticationFilter">
        <beans:property name="authenticationSuccessHandler"
                                ref="successHandler" />
        <beans:property name="authenticationFailureHandler"
                                ref="failureHandler" />
        <beans:property name="authenticationManager" ref="authenticationManager" />
        <beans:property name="userService" ref="userService" />
        <beans:property name="sessionAuthenticationStrategy"
                                ref="sas" />
    </beans:bean>

    <beans:bean id="exceptionTranslationFilter"
                    class="org.springframework.security.web.access.ExceptionTranslationFilter">
        <beans:property name="authenticationEntryPoint" ref="loginUrlAuthenticationEntryPoint" />
        <beans:property name="requestCache" ref="requestCache" />
    </beans:bean>

    <beans:bean id="successHandler"
                    class="org.springframework.security.web.authentication.SavedRequestAwareAuthenticationSuccessHandler">
        <beans:property name="defaultTargetUrl" value="/user/home.xhtml" />
        <beans:property name="requestCache" ref="requestCache" />
    </beans:bean>

    <beans:bean id="requestCache"
                    class="org.springframework.security.web.savedrequest.HttpSessionRequestCache">
        <beans:property name="justUseSavedRequestOnGet" value="true" />
    </beans:bean>

    <beans:bean id="failureHandler"
                    class="org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler">
        <beans:property name="defaultFailureUrl" value="/giris/hata/1" />
    </beans:bean>

    <beans:bean id="loginUrlAuthenticationEntryPoint"
                    class="com.dna.bifincan.security.CustomAuthenticationEntryPoint">
        <beans:property name="loginFormUrl" value="/giris" />
        <beans:property name="forceHttps" value="true" />
    </beans:bean>

	<!-- Define local authentication provider -->
	<!-- security -->
    <authentication-manager alias="authenticationManager">
        <authentication-provider user-service-ref="userDetailsService">
            <password-encoder ref="passwordEncoder">
                <salt-source ref="saltSource" />
            </password-encoder>
        </authentication-provider>
    </authentication-manager>

    <beans:bean id="passwordEncoder"
                    class="org.springframework.security.authentication.encoding.Md5PasswordEncoder" />

    <global-method-security jsr250-annotations="enabled" />
</beans:beans>
